{"ast":null,"code":"import styled from \"styled-components\";\nexport const Container = styled.div`\n  position: relative;\n  width: ${({\n  containerSize\n}) => `${containerSize}px`};\n  height: ${({\n  containerSize\n}) => `${containerSize}px`};\n  font-family: Inter;\n  strong {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    font-family: \"Inter\";\n    transform: translate(-50%, -50%);\n    font-size: ${({\n  font\n}) => font ? `${font}px` : \"14px\"};\n  }\n`;\nexport const CircleContainer = styled.svg`\n  width: ${({\n  containerSize\n}) => `${containerSize * 2}px`};\n  height: ${({\n  containerSize\n}) => `${containerSize * 2}px`};\n  margin: ${({\n  containerSize\n}) => `-${containerSize / 2}px`};\n  transform: rotate(270deg);\n`;\nexport const Circle = styled.circle`\n  stroke-dasharray: ${({\n  length\n}) => length};\n  stroke-dashoffset: ${({\n  percent\n}) => percent};\n  stroke-width: ${({\n  strokeWidth\n}) => strokeWidth ? strokeWidth : 4};\n  stroke-linecap: round;\n  stroke: ${({\n  bgCircle\n}) => bgCircle};\n`;","map":{"version":3,"names":["styled","Container","div","containerSize","font","CircleContainer","svg","Circle","circle","length","percent","strokeWidth","bgCircle"],"sources":["C:/Projetos/Sistema de agendamentos/front/src/components/ProgressCircleBar/styles.ts"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\ninterface CircleProps {\r\n  length: number;\r\n  percent: number;\r\n  bgCircle?: string;\r\n  strokeWidth?: number;\r\n}\r\n\r\ninterface ContainerProps {\r\n  containerSize: number;\r\n  font?: number;\r\n}\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n  position: relative;\r\n  width: ${({ containerSize }) => `${containerSize}px`};\r\n  height: ${({ containerSize }) => `${containerSize}px`};\r\n  font-family: Inter;\r\n  strong {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    font-family: \"Inter\";\r\n    transform: translate(-50%, -50%);\r\n    font-size: ${({ font }) => (font ? `${font}px` : \"14px\")};\r\n  }\r\n`;\r\n\r\nexport const CircleContainer = styled.svg<ContainerProps>`\r\n  width: ${({ containerSize }) => `${containerSize * 2}px`};\r\n  height: ${({ containerSize }) => `${containerSize * 2}px`};\r\n  margin: ${({ containerSize }) => `-${containerSize / 2}px`};\r\n  transform: rotate(270deg);\r\n`;\r\n\r\nexport const Circle = styled.circle<CircleProps>`\r\n  stroke-dasharray: ${({ length }) => length};\r\n  stroke-dashoffset: ${({ percent }) => percent};\r\n  stroke-width: ${({ strokeWidth }) => (strokeWidth ? strokeWidth : 4)};\r\n  stroke-linecap: round;\r\n  stroke: ${({ bgCircle }) => bgCircle};\r\n`;\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,mBAAmB;AActC,OAAO,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAmB;AACnD;AACA,WAAW,CAAC;EAAEC;AAAc,CAAC,KAAK,GAAGA,aAAa,IAAI;AACtD,YAAY,CAAC;EAAEA;AAAc,CAAC,KAAK,GAAGA,aAAa,IAAI;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,CAAC;EAAEC;AAAK,CAAC,KAAMA,IAAI,GAAG,GAAGA,IAAI,IAAI,GAAG,MAAO;AAC5D;AACA,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGL,MAAM,CAACM,GAAmB;AACzD,WAAW,CAAC;EAAEH;AAAc,CAAC,KAAK,GAAGA,aAAa,GAAG,CAAC,IAAI;AAC1D,YAAY,CAAC;EAAEA;AAAc,CAAC,KAAK,GAAGA,aAAa,GAAG,CAAC,IAAI;AAC3D,YAAY,CAAC;EAAEA;AAAc,CAAC,KAAK,IAAIA,aAAa,GAAG,CAAC,IAAI;AAC5D;AACA,CAAC;AAED,OAAO,MAAMI,MAAM,GAAGP,MAAM,CAACQ,MAAmB;AAChD,sBAAsB,CAAC;EAAEC;AAAO,CAAC,KAAKA,MAAM;AAC5C,uBAAuB,CAAC;EAAEC;AAAQ,CAAC,KAAKA,OAAO;AAC/C,kBAAkB,CAAC;EAAEC;AAAY,CAAC,KAAMA,WAAW,GAAGA,WAAW,GAAG,CAAE;AACtE;AACA,YAAY,CAAC;EAAEC;AAAS,CAAC,KAAKA,QAAQ;AACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}